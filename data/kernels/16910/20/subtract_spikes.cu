#include "includes.h"
const int  Nthreads = 1024, maxFR = 100000, NrankMax = 3, nmaxiter = 500, NchanMax = 32;
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

// THIS UPDATE DOES NOT UPDATE ELOSS?
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////






//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
__global__ void	subtract_spikes(const double *Params,  const int *st, const int *id, const float *x, const int *counter, float *dataraw, const float *W, const float *U){
int nt0, tidx, tidy, k, NT, ind, Nchan, Nfilt, Nrank;
float X;

NT        = (int) Params[0];
nt0       = (int) Params[4];
Nchan     = (int) Params[9];
Nfilt    	=   (int) Params[1];
Nrank     = (int) Params[6];

tidx 		= threadIdx.x;
ind       = counter[1]+blockIdx.x;

while(ind<counter[0]){
tidy = threadIdx.y;

while (tidy<Nchan){
X = 0.0f;
for (k=0;k<Nrank;k++)
X += W[tidx + id[ind]* nt0 + nt0*Nfilt*k] *
U[tidy + id[ind] * Nchan + Nchan*Nfilt*k];

dataraw[tidx + st[ind] + NT * tidy] -= x[ind] * X;
tidy += blockDim.y;
}
ind += gridDim.x;
}
}