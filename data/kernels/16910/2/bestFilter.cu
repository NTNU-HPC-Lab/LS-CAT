#include "includes.h"
const int  Nthreads = 1024, maxFR = 5000, NrankMax = 6;
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
__global__ void  bestFilter(const double *Params, const float *data, float *err, int *ftype, int *kkmax, int *kall){

int tid, tid0, i, bid, NT, Nchan, ibest = 0, kbest;
float  Cf, Cbest = 0.0f;

tid 		= threadIdx.x;
bid 		= blockIdx.x;
NT 		= (int) Params[0];
Nchan     = (int) Params[9];

tid0 = tid + bid * blockDim.x;
while (tid0<NT){
kbest = 0;
for (i=0; i<Nchan;i++){
Cf = data[tid0 + NT*i];
if (Cf > Cbest + 1e-6){
Cbest 	= Cf;
ibest 	= i;
kbest 	= kkmax[tid0 + NT*i];
}
}
err[tid0] 	= Cbest;
ftype[tid0] 	= ibest;
kall[tid0] 	= kbest;

tid0 += blockDim.x * gridDim.x;
}
}